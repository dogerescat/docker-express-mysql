<div id="flash-message"></div>
<div style="width: 80%; margin: 30px auto">
  <form id="edit-contents-form" class="form-group" action="">
    <div class="form-group" style="margin-bottom: 20px">
      <label for="">タイトル</label>
      <div class="row">
        <div class="col-md-12">
          <input
            type="text"
            class="form-control"
            name="title"
            value="<%= title %> "
          />
        </div>
      </div>
    </div>
    <div class="form-group" style="margin-bottom: 20px">
      <label for="">コンテンツ</label>
      <div class="row">
        <div class="col-md-12">
          <textarea name="contents" class="form-control">
            <%= contents %>
          </textarea>
        </div>
      </div>
    </div>
    <div class="form-group col-xs-5">
      <input
        id="<%= id %>"
        type="button"
        class="btn btn-primary w-30 contents-edit"
        value="編集"
      />
    </div>
  </form>
</div>
<script>
  const contentsForm = document.getElementById('edit-contents-form');
  const flashMessage = document.getElementById('flash-message');
  const contentsEdit = document.querySelector('.contents-edit');
  const updataContents = (id) => {
    const data = new FormData(contentsForm);
    const token = getToken();
    fetch(`/post/update/${id}`, {
      headers: {
        Authorization: `Bearer ${token}`,
      },
      method: 'POST',
      body: data,
    })
      .then((res) => {
        if (res.ok) {
          return res.json();
        }
      })
      .then((msg) => {
        refleshMessage();
        createMessage(msg);
      })
      .catch((error) => {
        location.href = '/post';
      });
  };

  const getToken = () => {
    let token = localStorage.getItem('token');
    token = JSON.parse(token);
    return token;
  };

  const createMessage = (msg) => {
    const messageElement = document.createElement('div');
    messageElement.classList.add('alert', 'alert-success');
    messageElement.setAttribute('role', 'alert');
    const p = document.createElement('p');
    p.appendChild(document.createTextNode(msg));
    messageElement.appendChild(p);
    flashMessage.appendChild(messageElement);
  };

  const refleshMessage = () => {
    while (flashMessage.firstChild) {
      flashMessage.removeChild(flashMessage.firstChild);
    }
  };

  contentsEdit.addEventListener('click', (event) => {
    updataContents(event.target.id);
  });
</script>
